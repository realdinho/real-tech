import Vuex from 'vuex'
import axios from 'axios'

const createStore = () => {
  return new Vuex.Store({
    state: {
      loadedPosts: []
    },
    mutations: {
      setPosts(state, posts) {
        state.loadedPosts = posts
      }
    },
    actions: {
      nuxtServerInit(vuexContext, context) {
        return axios.get('https://real-tech-d036d-default-rtdb.firebaseio.com/posts.json')
          .then(res => {
            const postArray = []
            for (const key in res.data) {
              postArray.push({ ...res.data[key], id: key })
            }
            vuexContext.commit('setPosts', postArray)
          })
          .catch(e => context.error(e))
      }, 
      setPosts(vuexContext, posts) {
        vuexContext.commit('setPosts', posts)
      }
    },
    getters: {
      loadedPosts(state) {
        return state.loadedPosts
      }
    }
  })
}
export default createStore


// export const state = () => ({
//   loadedPosts: []
// })

// export const mutations = {
//   setPosts(state, posts) {
//     state.loadedPosts = posts
//   }
// }

// export const actions = {
//   nuxtServerInit(vuexContext, context) {
//     return axios.get('https://real-tech-d036d-default-rtdb.firebaseio.com/posts.json')
//       .then(res => {
//         console.log(res);
//         const postArray = []
//         for (const key in res.data) {
//           postArray.push({ ...res.data[key], id: key })
//         }
//         vuexContext.commit('setPosts', postArray)
//       })
//       .catch(e => context.error(e))
//   }, 
//   setPosts(vuexContext, posts) {
//     vuexContext.commit('setPosts', posts)
//   }
// }

// export const getters = {
//   loadedPosts(state) {
//     return state.loadedPosts
//   }
// }
